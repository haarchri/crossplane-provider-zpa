---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: configcontrollers.zpalssconfigcontroller.zpa.crossplane.io
spec:
  group: zpalssconfigcontroller.zpa.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - zpa
    kind: ConfigController
    listKind: ConfigControllerList
    plural: configcontrollers
    singular: configcontroller
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConfigController is the Schema for the ConfigControllers API.
          <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigControllerSpec defines the desired state of ConfigController
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  config:
                    items:
                      properties:
                        auditMessage:
                          type: string
                        description:
                          description: Description of the LSS configuration
                          type: string
                        enabled:
                          description: 'Whether this LSS configuration is enabled
                            or not. Supported values: true, false'
                          type: boolean
                        filter:
                          description: 'Filter for the LSS configuration. Format given
                            by the following API to get status codes: /mgmtconfig/v2/admin/lssConfig/statusCodes'
                          items:
                            type: string
                          type: array
                        format:
                          description: 'Format of the log type. Format given by the
                            following API to get formats: /mgmtconfig/v2/admin/lssConfig/logType/formats'
                          type: string
                        lssHost:
                          description: Host of the LSS configuration
                          type: string
                        lssPort:
                          description: Port of the LSS configuration
                          type: string
                        name:
                          description: Name of the LSS configuration
                          type: string
                        sourceLogType:
                          description: Log type of the LSS configuration
                          type: string
                        useTls:
                          type: boolean
                      required:
                      - format
                      - lssHost
                      - lssPort
                      - name
                      - sourceLogType
                      type: object
                    type: array
                  connectorGroups:
                    description: App Connector Group(s) to be added to the LSS configuration
                    items:
                      properties:
                        id:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  policyRuleResource:
                    items:
                      properties:
                        action:
                          description: This is for providing the rule action.
                          type: string
                        actionId:
                          description: This field defines the description of the server.
                          type: string
                        bypassDefaultRule:
                          type: boolean
                        conditions:
                          description: This is for proviidng the set of conditions
                            for the policy.
                          items:
                            properties:
                              negated:
                                type: boolean
                              operands:
                                description: This signifies the various policy criteria.
                                items:
                                  properties:
                                    objectType:
                                      description: This is for specifying the policy
                                        critiera.
                                      type: string
                                    values:
                                      description: This denotes a list of values for
                                        the given object type. The value depend upon
                                        the key. If rhs is defined this list will
                                        be ignored
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - objectType
                                  type: object
                                type: array
                              operator:
                                type: string
                            required:
                            - operator
                            type: object
                          type: array
                        customMsg:
                          description: This is for providing a customer message for
                            the user.
                          type: string
                        defaultRule:
                          description: This is for providing a customer message for
                            the user.
                          type: boolean
                        description:
                          description: This is the description of the access policy.
                          type: string
                        lssDefaultRule:
                          type: boolean
                        name:
                          description: This is the name of the policy.
                          type: string
                        operator:
                          type: string
                        policySetId:
                          type: string
                        policyType:
                          type: string
                        priority:
                          type: string
                        reauthDefaultRule:
                          type: boolean
                        reauthIdleTimeout:
                          type: string
                        reauthTimeout:
                          type: string
                        ruleOrder:
                          type: string
                        zpnInspectionProfileId:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ConfigControllerStatus defines the observed state of ConfigController.
            properties:
              atProvider:
                properties:
                  config:
                    items:
                      properties:
                        id:
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  policyRuleId:
                    type: string
                  policyRuleResource:
                    items:
                      properties:
                        id:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
