//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroup) DeepCopyInto(out *ConnectorGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroup.
func (in *ConnectorGroup) DeepCopy() *ConnectorGroup {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectorGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupInitParameters) DeepCopyInto(out *ConnectorGroupInitParameters) {
	*out = *in
	if in.CityCountry != nil {
		in, out := &in.CityCountry, &out.CityCountry
		*out = new(string)
		**out = **in
	}
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.DNSQueryType != nil {
		in, out := &in.DNSQueryType, &out.DNSQueryType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.LssAppConnectorGroup != nil {
		in, out := &in.LssAppConnectorGroup, &out.LssAppConnectorGroup
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideVersionProfile != nil {
		in, out := &in.OverrideVersionProfile, &out.OverrideVersionProfile
		*out = new(bool)
		**out = **in
	}
	if in.PraEnabled != nil {
		in, out := &in.PraEnabled, &out.PraEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckApp != nil {
		in, out := &in.TCPQuickAckApp, &out.TCPQuickAckApp
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckAssistant != nil {
		in, out := &in.TCPQuickAckAssistant, &out.TCPQuickAckAssistant
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckReadAssistant != nil {
		in, out := &in.TCPQuickAckReadAssistant, &out.TCPQuickAckReadAssistant
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeDay != nil {
		in, out := &in.UpgradeDay, &out.UpgradeDay
		*out = new(string)
		**out = **in
	}
	if in.UpgradeTimeInSecs != nil {
		in, out := &in.UpgradeTimeInSecs, &out.UpgradeTimeInSecs
		*out = new(string)
		**out = **in
	}
	if in.UseInDrMode != nil {
		in, out := &in.UseInDrMode, &out.UseInDrMode
		*out = new(bool)
		**out = **in
	}
	if in.VersionProfileID != nil {
		in, out := &in.VersionProfileID, &out.VersionProfileID
		*out = new(string)
		**out = **in
	}
	if in.VersionProfileName != nil {
		in, out := &in.VersionProfileName, &out.VersionProfileName
		*out = new(string)
		**out = **in
	}
	if in.WafDisabled != nil {
		in, out := &in.WafDisabled, &out.WafDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupInitParameters.
func (in *ConnectorGroupInitParameters) DeepCopy() *ConnectorGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupList) DeepCopyInto(out *ConnectorGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConnectorGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupList.
func (in *ConnectorGroupList) DeepCopy() *ConnectorGroupList {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectorGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupObservation) DeepCopyInto(out *ConnectorGroupObservation) {
	*out = *in
	if in.CityCountry != nil {
		in, out := &in.CityCountry, &out.CityCountry
		*out = new(string)
		**out = **in
	}
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.DNSQueryType != nil {
		in, out := &in.DNSQueryType, &out.DNSQueryType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.LssAppConnectorGroup != nil {
		in, out := &in.LssAppConnectorGroup, &out.LssAppConnectorGroup
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideVersionProfile != nil {
		in, out := &in.OverrideVersionProfile, &out.OverrideVersionProfile
		*out = new(bool)
		**out = **in
	}
	if in.PraEnabled != nil {
		in, out := &in.PraEnabled, &out.PraEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckApp != nil {
		in, out := &in.TCPQuickAckApp, &out.TCPQuickAckApp
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckAssistant != nil {
		in, out := &in.TCPQuickAckAssistant, &out.TCPQuickAckAssistant
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckReadAssistant != nil {
		in, out := &in.TCPQuickAckReadAssistant, &out.TCPQuickAckReadAssistant
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeDay != nil {
		in, out := &in.UpgradeDay, &out.UpgradeDay
		*out = new(string)
		**out = **in
	}
	if in.UpgradeTimeInSecs != nil {
		in, out := &in.UpgradeTimeInSecs, &out.UpgradeTimeInSecs
		*out = new(string)
		**out = **in
	}
	if in.UseInDrMode != nil {
		in, out := &in.UseInDrMode, &out.UseInDrMode
		*out = new(bool)
		**out = **in
	}
	if in.VersionProfileID != nil {
		in, out := &in.VersionProfileID, &out.VersionProfileID
		*out = new(string)
		**out = **in
	}
	if in.VersionProfileName != nil {
		in, out := &in.VersionProfileName, &out.VersionProfileName
		*out = new(string)
		**out = **in
	}
	if in.WafDisabled != nil {
		in, out := &in.WafDisabled, &out.WafDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupObservation.
func (in *ConnectorGroupObservation) DeepCopy() *ConnectorGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupParameters) DeepCopyInto(out *ConnectorGroupParameters) {
	*out = *in
	if in.CityCountry != nil {
		in, out := &in.CityCountry, &out.CityCountry
		*out = new(string)
		**out = **in
	}
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.DNSQueryType != nil {
		in, out := &in.DNSQueryType, &out.DNSQueryType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.LssAppConnectorGroup != nil {
		in, out := &in.LssAppConnectorGroup, &out.LssAppConnectorGroup
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideVersionProfile != nil {
		in, out := &in.OverrideVersionProfile, &out.OverrideVersionProfile
		*out = new(bool)
		**out = **in
	}
	if in.PraEnabled != nil {
		in, out := &in.PraEnabled, &out.PraEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckApp != nil {
		in, out := &in.TCPQuickAckApp, &out.TCPQuickAckApp
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckAssistant != nil {
		in, out := &in.TCPQuickAckAssistant, &out.TCPQuickAckAssistant
		*out = new(bool)
		**out = **in
	}
	if in.TCPQuickAckReadAssistant != nil {
		in, out := &in.TCPQuickAckReadAssistant, &out.TCPQuickAckReadAssistant
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeDay != nil {
		in, out := &in.UpgradeDay, &out.UpgradeDay
		*out = new(string)
		**out = **in
	}
	if in.UpgradeTimeInSecs != nil {
		in, out := &in.UpgradeTimeInSecs, &out.UpgradeTimeInSecs
		*out = new(string)
		**out = **in
	}
	if in.UseInDrMode != nil {
		in, out := &in.UseInDrMode, &out.UseInDrMode
		*out = new(bool)
		**out = **in
	}
	if in.VersionProfileID != nil {
		in, out := &in.VersionProfileID, &out.VersionProfileID
		*out = new(string)
		**out = **in
	}
	if in.VersionProfileName != nil {
		in, out := &in.VersionProfileName, &out.VersionProfileName
		*out = new(string)
		**out = **in
	}
	if in.WafDisabled != nil {
		in, out := &in.WafDisabled, &out.WafDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupParameters.
func (in *ConnectorGroupParameters) DeepCopy() *ConnectorGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupSpec) DeepCopyInto(out *ConnectorGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupSpec.
func (in *ConnectorGroupSpec) DeepCopy() *ConnectorGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorGroupStatus) DeepCopyInto(out *ConnectorGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorGroupStatus.
func (in *ConnectorGroupStatus) DeepCopy() *ConnectorGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectorGroupStatus)
	in.DeepCopyInto(out)
	return out
}
