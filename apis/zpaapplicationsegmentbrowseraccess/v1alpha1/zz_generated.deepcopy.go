//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientlessAppsObservation) DeepCopyInto(out *ClientlessAppsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientlessAppsObservation.
func (in *ClientlessAppsObservation) DeepCopy() *ClientlessAppsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientlessAppsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientlessAppsParameters) DeepCopyInto(out *ClientlessAppsParameters) {
	*out = *in
	if in.AllowOptions != nil {
		in, out := &in.AllowOptions, &out.AllowOptions
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationPort != nil {
		in, out := &in.ApplicationPort, &out.ApplicationPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationProtocol != nil {
		in, out := &in.ApplicationProtocol, &out.ApplicationProtocol
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.LocalDomain != nil {
		in, out := &in.LocalDomain, &out.LocalDomain
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TrustUntrustedCert != nil {
		in, out := &in.TrustUntrustedCert, &out.TrustUntrustedCert
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientlessAppsParameters.
func (in *ClientlessAppsParameters) DeepCopy() *ClientlessAppsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientlessAppsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccess) DeepCopyInto(out *SegmentBrowserAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccess.
func (in *SegmentBrowserAccess) DeepCopy() *SegmentBrowserAccess {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SegmentBrowserAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccessList) DeepCopyInto(out *SegmentBrowserAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SegmentBrowserAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccessList.
func (in *SegmentBrowserAccessList) DeepCopy() *SegmentBrowserAccessList {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SegmentBrowserAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccessObservation) DeepCopyInto(out *SegmentBrowserAccessObservation) {
	*out = *in
	if in.ClientlessApps != nil {
		in, out := &in.ClientlessApps, &out.ClientlessApps
		*out = make([]ClientlessAppsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccessObservation.
func (in *SegmentBrowserAccessObservation) DeepCopy() *SegmentBrowserAccessObservation {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccessParameters) DeepCopyInto(out *SegmentBrowserAccessParameters) {
	*out = *in
	if in.BypassType != nil {
		in, out := &in.BypassType, &out.BypassType
		*out = new(string)
		**out = **in
	}
	if in.ClientlessApps != nil {
		in, out := &in.ClientlessApps, &out.ClientlessApps
		*out = make([]ClientlessAppsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigSpace != nil {
		in, out := &in.ConfigSpace, &out.ConfigSpace
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DoubleEncrypt != nil {
		in, out := &in.DoubleEncrypt, &out.DoubleEncrypt
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.HealthReporting != nil {
		in, out := &in.HealthReporting, &out.HealthReporting
		*out = new(string)
		**out = **in
	}
	if in.IPAnchored != nil {
		in, out := &in.IPAnchored, &out.IPAnchored
		*out = new(bool)
		**out = **in
	}
	if in.IcmpAccessType != nil {
		in, out := &in.IcmpAccessType, &out.IcmpAccessType
		*out = new(string)
		**out = **in
	}
	if in.IsCnameEnabled != nil {
		in, out := &in.IsCnameEnabled, &out.IsCnameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PassiveHealthEnabled != nil {
		in, out := &in.PassiveHealthEnabled, &out.PassiveHealthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SegmentGroupID != nil {
		in, out := &in.SegmentGroupID, &out.SegmentGroupID
		*out = new(string)
		**out = **in
	}
	if in.SegmentGroupName != nil {
		in, out := &in.SegmentGroupName, &out.SegmentGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerGroups != nil {
		in, out := &in.ServerGroups, &out.ServerGroups
		*out = make([]ServerGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPPortRange != nil {
		in, out := &in.TCPPortRange, &out.TCPPortRange
		*out = make([]TCPPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPPortRanges != nil {
		in, out := &in.TCPPortRanges, &out.TCPPortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UDPPortRange != nil {
		in, out := &in.UDPPortRange, &out.UDPPortRange
		*out = make([]UDPPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPPortRanges != nil {
		in, out := &in.UDPPortRanges, &out.UDPPortRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccessParameters.
func (in *SegmentBrowserAccessParameters) DeepCopy() *SegmentBrowserAccessParameters {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccessSpec) DeepCopyInto(out *SegmentBrowserAccessSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccessSpec.
func (in *SegmentBrowserAccessSpec) DeepCopy() *SegmentBrowserAccessSpec {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentBrowserAccessStatus) DeepCopyInto(out *SegmentBrowserAccessStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentBrowserAccessStatus.
func (in *SegmentBrowserAccessStatus) DeepCopy() *SegmentBrowserAccessStatus {
	if in == nil {
		return nil
	}
	out := new(SegmentBrowserAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupsObservation) DeepCopyInto(out *ServerGroupsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupsObservation.
func (in *ServerGroupsObservation) DeepCopy() *ServerGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(ServerGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupsParameters) DeepCopyInto(out *ServerGroupsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupsParameters.
func (in *ServerGroupsParameters) DeepCopy() *ServerGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPPortRangeObservation) DeepCopyInto(out *TCPPortRangeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPPortRangeObservation.
func (in *TCPPortRangeObservation) DeepCopy() *TCPPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(TCPPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPPortRangeParameters) DeepCopyInto(out *TCPPortRangeParameters) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPPortRangeParameters.
func (in *TCPPortRangeParameters) DeepCopy() *TCPPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(TCPPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPPortRangeObservation) DeepCopyInto(out *UDPPortRangeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPPortRangeObservation.
func (in *UDPPortRangeObservation) DeepCopy() *UDPPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(UDPPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPPortRangeParameters) DeepCopyInto(out *UDPPortRangeParameters) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPPortRangeParameters.
func (in *UDPPortRangeParameters) DeepCopy() *UDPPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(UDPPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}
