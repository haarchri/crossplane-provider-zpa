/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/zscaler/crossplane-provider-zpa/apis/v1alpha1"
	v1beta1 "github.com/zscaler/crossplane-provider-zpa/apis/v1beta1"
	v1alpha1zpaaccessrule "github.com/zscaler/crossplane-provider-zpa/apis/zpaaccessrule/v1alpha1"
	v1alpha1zpaappconnectorgroup "github.com/zscaler/crossplane-provider-zpa/apis/zpaappconnectorgroup/v1alpha1"
	v1alpha1zpaapplicationsegment "github.com/zscaler/crossplane-provider-zpa/apis/zpaapplicationsegment/v1alpha1"
	v1alpha1zpaapplicationsegmentbrowseraccess "github.com/zscaler/crossplane-provider-zpa/apis/zpaapplicationsegmentbrowseraccess/v1alpha1"
	v1alpha1zpaapplicationsegmentinspection "github.com/zscaler/crossplane-provider-zpa/apis/zpaapplicationsegmentinspection/v1alpha1"
	v1alpha1zpaapplicationsegmentpra "github.com/zscaler/crossplane-provider-zpa/apis/zpaapplicationsegmentpra/v1alpha1"
	v1alpha1zpaapplicationserver "github.com/zscaler/crossplane-provider-zpa/apis/zpaapplicationserver/v1alpha1"
	v1alpha1zpaforwardingrule "github.com/zscaler/crossplane-provider-zpa/apis/zpaforwardingrule/v1alpha1"
	v1alpha1zpainspectioncustomcontrols "github.com/zscaler/crossplane-provider-zpa/apis/zpainspectioncustomcontrols/v1alpha1"
	v1alpha1zpainspectionprofile "github.com/zscaler/crossplane-provider-zpa/apis/zpainspectionprofile/v1alpha1"
	v1alpha1zpainspectionrule "github.com/zscaler/crossplane-provider-zpa/apis/zpainspectionrule/v1alpha1"
	v1alpha1zpalssconfigcontroller "github.com/zscaler/crossplane-provider-zpa/apis/zpalssconfigcontroller/v1alpha1"
	v1alpha1zpaprovisioningkey "github.com/zscaler/crossplane-provider-zpa/apis/zpaprovisioningkey/v1alpha1"
	v1alpha1zpasegmentgroup "github.com/zscaler/crossplane-provider-zpa/apis/zpasegmentgroup/v1alpha1"
	v1alpha1zpaservergroup "github.com/zscaler/crossplane-provider-zpa/apis/zpaservergroup/v1alpha1"
	v1alpha1zpaserviceedgegroup "github.com/zscaler/crossplane-provider-zpa/apis/zpaserviceedgegroup/v1alpha1"
	v1alpha1zpatimeoutrule "github.com/zscaler/crossplane-provider-zpa/apis/zpatimeoutrule/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1zpaaccessrule.SchemeBuilder.AddToScheme,
		v1alpha1zpaappconnectorgroup.SchemeBuilder.AddToScheme,
		v1alpha1zpaapplicationsegment.SchemeBuilder.AddToScheme,
		v1alpha1zpaapplicationsegmentbrowseraccess.SchemeBuilder.AddToScheme,
		v1alpha1zpaapplicationsegmentinspection.SchemeBuilder.AddToScheme,
		v1alpha1zpaapplicationsegmentpra.SchemeBuilder.AddToScheme,
		v1alpha1zpaapplicationserver.SchemeBuilder.AddToScheme,
		v1alpha1zpaforwardingrule.SchemeBuilder.AddToScheme,
		v1alpha1zpainspectioncustomcontrols.SchemeBuilder.AddToScheme,
		v1alpha1zpainspectionprofile.SchemeBuilder.AddToScheme,
		v1alpha1zpainspectionrule.SchemeBuilder.AddToScheme,
		v1alpha1zpalssconfigcontroller.SchemeBuilder.AddToScheme,
		v1alpha1zpaprovisioningkey.SchemeBuilder.AddToScheme,
		v1alpha1zpasegmentgroup.SchemeBuilder.AddToScheme,
		v1alpha1zpaservergroup.SchemeBuilder.AddToScheme,
		v1alpha1zpaserviceedgegroup.SchemeBuilder.AddToScheme,
		v1alpha1zpatimeoutrule.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
